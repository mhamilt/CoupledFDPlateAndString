function Hz = note2hz(notes)
  % Notes to Herz conversion.
  % Convert a string cell of scientific notation to a value in Hz.
  if nargin<1
    error('Not enough input arguements')
  elseif nargin>1
    error('Too many input arguements')
  end
  noteHz = ...
  {'A'	13.75	1254.55;...
  'A#' 	14.568	1184.13;...
  'B'	15.434	1117.67;...
  'C'	16.3516	2109.89;...
  'C#' 	17.3239	1991.47;...
  'D'	18.3540	1879.69;...
  'D#' 	19.4454	1774.20;...
  'E'	20.6017	1674.62;...
  'F'	21.8268	1580.63;...
  'F#' 	23.1247	1491.91;...
  'G'	24.4997	1408.18;...
  'G#' 	25.9565	1329.14};

  for n = 1:length(notes)

    noteRes = regexp(noteHz(:,1), [notes{n}(1:end-1) '$']);
    hzi = find(not(cellfun('isempty', noteRes)));

    if isempty(hzi)
      error([sprintf(['''%s'' is not a valid note\n'...
      'Make sure to use ''#'' for accidentals'...
      'Choose one of the following:-\n\n'],notes{n}(1:end))...
      sprintf('%s''0''\n',string(noteHz(:,1)))...
      sprintf('Replace ''0'' with the relevant octave number\n')])
    end

    %%% accomodate negative octave numbers

    oct = (str2num(notes{n}(end)));

    %%%This is doubling the f0
    Hz(n) = noteHz{hzi,2}*2^(oct+1);

  end
end
